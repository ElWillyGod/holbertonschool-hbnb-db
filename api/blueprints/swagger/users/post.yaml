Create a new user.
---
tags:
  - users

parameters:
  - in: body
    name: user
    required: true
    schema:
      type: object
      required:
        - email
        - first_name
        - last_name
        - password
        - is_admin
      properties:
        email:
          type: string
          description: Email address of the user
          example: example@gmail.com
        first_name:
          type: string
          description: First name of the user
          example: Alice
        last_name:
          type: string
          description: Last name of the user
          example: Smith
        password:
          type: string
          description: Password of the user
          example: AliceSmith1234
        is_admin:
          type: bool
          description: Is the user an admin?
          example: false


responses:
  201:
    description: User created successfully
    schema:
      type: object
      properties:
        id:
          type: string
          description: The ID of the review
          example: "1f2390e77d1341a3b59d0cb56fba5f45"
        email:
          type: string
          description: Email address of the user
          example: example@gmail.com
        first_name:
          type: string
          description: First name of the user
          example: Alice
        last_name:
          type: string
          description: Last name of the user
          example: Smith
        password:
          type: string
          description: Password of the user
          example: AliceSmith1234
        is_admin:
          type: bool
          description: Is the user an admin?
          example: false
        created_at:
          type: string
          description: Date and time when the review was created
          example: "2077-03-30 03:30:30.303030"
        updated_at:
          type: string
          description: Date and time when the review was last updated
          example: "2077-03-30 03:30:30.303030"
  400:
    description: Invalid request data or missing fields
    schema:
      type: object
      properties:
        error:
          type: string
          example: invalid data
  401:
    description: Not authenticated.
    schema:
      type: object
      properties:
        error:
          type: string
          example: unauthenticated
  403:
    description: Not authorized.
    schema:
      type: object
      properties:
        error:
          type: string
          example: requires admin privileges
  409:
    description: Email address already exists
    schema:
      type: object
      properties:
        error:
          type: string
          example: email already exists